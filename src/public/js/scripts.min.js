const URL="http://192.168.0.10:3333/api",loginResource="login",requestLogin=e=>new Promise((t,r)=>{const{email:s,password:o}=e;fetch("/api/login",{method:"POST",headers:{"content-type":"application/json"},body:JSON.stringify({email:s,password:o})}).then(e=>e.json()).then(e=>e.error?r(e.error):(t(e),console.log(e))).catch(e=>r(e))}),login=e=>{const t=e.querySelector(".loginMail"),r=e.querySelector(".loginPassword");return e.classList.add("was-validated"),t.value?(t.classList.remove("is-invalid"),t.classList.add("is-valid"),r.value?requestLogin({email:t.value,password:r.value}).then(e=>{window.location.href="/dashboard"}).catch(t=>{const r=document.createElement("div");r.classList.add("alert","alert-danger"),r.setAttribute("role","alert"),r.innerHTML=t,e.prepend(r),setTimeout(()=>{r.remove()},4e3)}):r.classList.add("is-invalid")):t.classList.add("is-invalid")},btnLogin=document.querySelector(".btnLogin");btnLogin&&btnLogin.addEventListener("click",e=>{e.preventDefault(),login(btnLogin.closest("form"))});const productResource="product";let codesInsert=[];const putSpinnet=(e,t)=>{const r=document.createElement("div");return r.classList.add("spinner-border","text-primary","float-right"),r.setAttribute("role","status"),r.innerHTML='<span class="sr-only">Loading...</span>',"insert"===t?e.append(r):"remove"===t?e.querySelector(".spinner-border").remove():void 0},changeBadgeForm=e=>{const t=document.querySelector(".colapseCodes"),r=t.closest(".accordion").querySelector(".card-header .badge");if(t)return r.innerHTML=e},removeCodeForm=e=>{e.addEventListener("click",t=>{const r=e.dataset.code,s=codesInsert.find(e=>e.code===r);if(s){let t=codesInsert.indexOf(s);return codesInsert.splice(t,1),e.closest(".col-12").remove(),changeBadgeForm(codesInsert.length)}console.log("código não esta presente")})},checkCodeInList=e=>!codesInsert.find(t=>t.code===e),createItem=e=>{const{prefix:t,code:r}=e,s=document.createElement("div");return s.classList.add("col-12","mb-3"),s.innerHTML=`\n    <div class="card">\n        <div class="card-header">\n            ${t}\n            <button type="button" class="float-right btn btn-danger btn-sm" data-code="${r}"><i class="fas fa-trash-alt"></i></button>\n        </div>\n        <div class="card-body">\n        ${r}\n        </div>\n    </div>\n    `,removeCodeForm(s.querySelector("button")),s},formValidate=e=>new Promise((t,r)=>{if("object"!=typeof e)return r("O parametro deve ser um array");const s=e.filter(e=>{if(!e.value)return e});return t({valids:e.filter(e=>{if(e.value)return e}),invalids:s})}),insertSingleCode=e=>{e.addEventListener("click",t=>{if(t.preventDefault(),e.disabled)return!1;const r=e.closest("form");putSpinnet(r,"insert");const s=r.querySelector(".productItemName"),o=r.querySelector(".productCode");return formValidate([s,o]).then(e=>{const{valids:t,invalids:a}=e;if(a.length)return a.map(e=>{e.classList.remove("is-valid"),e.classList.add("is-invalid")});if(!checkCodeInList(o.value))return putSpinnet(r,"remove"),Swal.fire({title:"O Código duplicado",text:`O Código ${o.value} já está cadastrado em um item`,icon:"error",confirmButtonText:"Ok"});codesInsert.push({code:o.value,name:s.value});const n=createItem({prefix:s.value,code:o.value}),i=document.querySelector(".colapseCodes");return i?(i.querySelector(".card-body > .row").append(n),changeBadgeForm(codesInsert.length),putSpinnet(r,"remove"),i.classList.add("show")):void 0})})},changeFileProduct=e=>{e.addEventListener("change",t=>{const r=e.value.split(/(\\|\/)/g).pop();e.closest(".custom-file").querySelector("label").innerHTML=r;const s=document.querySelector(".productItemName");return putSpinnet(s.closest("form"),"insert"),formValidate([s]).then(t=>{const{invalids:r,valids:o}=t;return r.length?(putSpinnet(s.closest("form"),"remove"),e.value="",r.map(e=>{e.classList.remove("is-valid"),e.classList.add("is-invalid")})):readFile(e.files[0]).then(e=>{const r=document.querySelector(".colapseCodes");r&&r.classList.add("show");const{invalids:o,valids:a}=t;return a.map(e=>{e.classList.remove("is-invalid"),e.classList.add("is-valid")}),e.map(e=>{const t=createItem({prefix:s.value,code:e.text});if(!checkCodeInList(e.text))return putSpinnet(s.closest("form"),"remove"),Swal.fire({title:"O Código duplicado",text:`O Código ${e.text} já está cadastrado em um item`,icon:"error",confirmButtonText:"Ok"});codesInsert.push({code:e.text,name:s.value}),changeBadgeForm(codesInsert.length),r.querySelector(".card-body > .row").append(t)})}).catch(e=>(putSpinnet(s.closest("form"),"remove"),Swal.fire({title:e,icon:"error",confirmButtonText:"Ok"})))})})},readFile=e=>new Promise((t,r)=>{const s=document.body.dataset.token,o=new FormData;o.append("file",e);const{type:a}=e;if("text/plain"!=a)return r("O tipo de arquivo deve ser .txt"),Swal.fire({title:"O tipo de arquivo deve ser .txt",text:"Selecione um arquivo com extensão txt",icon:"error",confirmButtonText:"Ok"});fetch("/api/file",{method:"POST",headers:{authorization:`Bearer ${s}`},body:o}).then(e=>e.json()).then(e=>t(e)).catch(e=>r(e))}),requestInsertProduct=e=>new Promise((t,r)=>{const{name:s,description:o,weight:a,brand:n,lot:i,type:d,availability:c,items:l}=e,u=document.body.dataset.token;fetch("/api/product",{method:"POST",headers:{"content-type":"application/json",authorization:`Bearer ${u}`},body:JSON.stringify({name:s,description:o,weight:a,brand:n,lot:i,type:d,availability:c,items:l})}).then(e=>e.json()).then(e=>e.error?r(e.error.replace(/(\r\n|\n|\r)/gm,"<br>")):(t(e),console.log(e))).catch(e=>r(e))}),productCreate=e=>{const t=e.querySelector(".productName"),r=e.querySelector(".productDescription"),s=e.querySelector(".productWeigth"),o=e.querySelector(".productBrand"),a=e.querySelector(".productLot"),n=e.querySelector(".productType"),i=e.querySelector(".productAvailability"),d=document.querySelector(".productItemName"),c=document.querySelector(".multCodes"),l=document.querySelector(".productCode"),u=document.querySelector(".fileToRead");e.classList.add("was-validated"),putSpinnet(e.closest("form"),"insert");const m=[t,s,o,a,n,i,d];return c.checked?m.push(u):m.push(l),formValidate(m).then(d=>{const{valids:c,invalids:l}=d;return console.log("Invalidos: ",l,"Validos: ",c),l.length&&(putSpinnet(e.closest("form"),"remove"),l.forEach(e=>{e.classList.remove("is-valid"),e.classList.add("is-invalid")})),codesInsert.length?(c.forEach(e=>{e.classList.remove("is-invalid"),e.classList.add("is-valid")}),requestInsertProduct({name:t.value,description:r.value,weight:s.value,brand:o.value,lot:a.value,type:n.value,availability:i.value,items:codesInsert}).then(t=>{if(t.error){const r=document.createElement("div");r.classList.add("alert","alert-danger"),r.setAttribute("role","alert"),r.innerHTML=t.error,e.prepend(r),setTimeout(()=>{r.remove()},4e3)}const r=e.querySelectorAll("input, textarea, .is-valid");return e.classList.remove("was-validated"),Array.from(r).forEach(e=>(e.value="",e.classList.remove("is-valid"))),putSpinnet(e.closest("form"),"remove"),Swal.fire({title:"Produto cadastrado",text:`O produto ${t.name} foi cadastrado com sucesso`,icon:"success",confirmButtonText:"Ok"})}).catch(t=>{const r=document.createElement("div");r.classList.add("alert","alert-danger"),r.setAttribute("role","alert"),r.innerHTML=t,e.prepend(r),putSpinnet(e.closest("form"),"remove"),setTimeout(()=>{r.remove()},4e3)})):Swal.fire({title:"Nenhum item cadastrado",text:"Por favor ensira ao menos 1 item no produto",icon:"error",confirmButtonText:"Ok"})}).catch(e=>{console.log(e)})},btnInsertProduct=document.querySelector(".btnInsertProduct");btnInsertProduct&&btnInsertProduct.addEventListener("click",e=>{e.preventDefault(),productCreate(btnInsertProduct.closest("form"))});const switchMultCodes=document.querySelector(".multCodes");switchMultCodes&&switchMultCodes.addEventListener("change",function(e){!0===switchMultCodes.checked?(document.querySelector(".form-items-codes .custom-file-wrapper").classList.add("show"),document.querySelector(".form-items-codes .singleCode").classList.add("hide"),document.querySelector(".btnInsertItemProduct").disabled=!0):(document.querySelector(".form-items-codes .custom-file-wrapper").classList.remove("show"),document.querySelector(".form-items-codes .singleCode").classList.remove("hide"),document.querySelector(".btnInsertItemProduct").disabled=!1)});const inputFileProduct=document.querySelector(".fileToRead");inputFileProduct&&changeFileProduct(inputFileProduct);const btnInsertItemProduct=document.querySelector(".btnInsertItemProduct");btnInsertItemProduct&&insertSingleCode(btnInsertItemProduct);const userResource="user",requestInsertAvatar=e=>new Promise((t,r)=>{const s=document.body.dataset.token,o=new FormData;o.append("file",e);fetch("/api/user/image",{method:"POST",headers:{authorization:`Bearer ${s}`},body:o}).then(e=>e.json()).then(e=>(console.log(e),t(e)))}),requestInsertUser=e=>new Promise((t,r)=>{const{name:s,email:o,password:a,phone:n,cell:i,type:d,image_id:c}=e,l=document.body.dataset.token;fetch("/api/user",{method:"POST",headers:{"content-type":"application/json",authorization:`Bearer ${l}`},body:JSON.stringify({name:s,email:o,password:a,phone:n,cell:i,type:d,image_id:c})}).then(e=>e.json()).then(e=>e.error?r(e.error):(t(e),console.log(e))).catch(e=>r(e))}),userCreate=e=>{const t=e.querySelector("input.userName"),r=e.querySelector(".userMail"),s=e.querySelector(".userPhone"),o=e.querySelector(".userCell"),a=e.querySelector(".userType"),n=e.querySelector(".userPassword"),i=e.querySelector(".inputUserImage");return e.classList.add("was-validated"),t.value?(t.classList.remove("is-invalid"),t.classList.add("is-valid"),r.value?(r.classList.remove("is-invalid"),r.classList.add("is-valid"),s.value?(s.classList.remove("is-invalid"),s.classList.add("is-valid"),o.value?(o.classList.remove("is-invalid"),o.classList.add("is-valid"),n.value?(n.classList.remove("is-invalid"),n.classList.add("is-valid"),a.value?(a.classList.remove("is-invalid"),a.classList.add("is-valid"),requestInsertUser({name:t.value,email:r.value,phone:s.value,cell:o.value,type:a.value,password:n.value,image_id:i.value}).then(t=>{if(t.error){const r=document.createElement("div");r.classList.add("alert","alert-danger"),r.setAttribute("role","alert"),r.innerHTML=t.error,e.prepend(r),setTimeout(()=>{r.remove()},4e3)}const r=e.querySelectorAll("input, textarea, .is-valid");return e.classList.remove("was-validated"),Array.from(r).forEach(e=>(e.value="",e.classList.remove("is-valid"))),alert(`Usuário ${t.name} cadastrado!`)}).catch(t=>{const r=document.createElement("div");r.classList.add("alert","alert-danger"),r.setAttribute("role","alert"),r.innerHTML=t,e.prepend(r),setTimeout(()=>{r.remove()},4e3)})):a.classList.add("is-invalid")):n.classList.add("is-invalid")):o.classList.add("is-invalid")):s.classList.add("is-invalid")):r.classList.add("is-invalid")):t.classList.add("is-invalid")},inputImageUser=document.querySelector(".userFile");inputImageUser&&inputImageUser.addEventListener("change",e=>(console.log(inputImageUser.files[0]),requestInsertAvatar(inputImageUser.files[0]).then(e=>{document.querySelector(".insertUserAvatar").setAttribute("src",e.url),document.querySelector(".inputUserImage").value=e.id})));const btnInsertUser=document.querySelector(".btnCreateUser");btnInsertUser&&btnInsertUser.addEventListener("click",e=>{e.preventDefault(),userCreate(btnInsertUser.closest("form"))});